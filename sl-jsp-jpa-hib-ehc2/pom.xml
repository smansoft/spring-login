<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.smansoft.sl</groupId>
		<artifactId>spring-login-sb</artifactId>
		<version>0.0.1</version>
		<relativePath>../pom-sb.xml</relativePath>
	</parent>

	<groupId>com.smansoft.sl</groupId>
	<artifactId>sl-jsp-jpa-hib-ehc2</artifactId>
	<version>0.0.1</version>
	<packaging>war</packaging>

	<name>sl-jsp-jpa-hib-ehc2</name>

    <repositories>
    </repositories>

	<properties>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.smansoft.sl</groupId>
			<artifactId>print-tool</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot.version}</version>
        	<exclusions>
            	<exclusion>
                	<groupId>org.springframework.boot</groupId>
	                <artifactId>spring-boot-starter-logging</artifactId>
    	        </exclusion>
        	</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<version>${spring-boot.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
			<version>${spring-boot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<version>${tomcat-embed-jasper.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jdt.core.compiler</groupId>
			<artifactId>ecj</artifactId>
			<version>${ecj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${bootstrap.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate-core.version}</version>
        	<exclusions>
            	<exclusion>
                	<groupId>net.sf.ehcache</groupId>
	                <artifactId>ehcache</artifactId>
    	        </exclusion>
        	</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>${hibernate-core.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache2.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		    <version>${slf4j.version}</version>
		</dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
			<scope>test</scope>
        </dependency>        
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>            
			<scope>test</scope>
        </dependency>
  	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
		                <version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${compiler-source.version}</source>
					<target>${compiler-target.version}</target>
	        			<compilerArgs>
				            <arg>${compiler-debug-arg}</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-dependencies-target</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${libs.dir}</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
					<execution>
						<id>copy-dependencies-bin</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/${target.root.dir}/${target2.folder.name}/${libs.dir}</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<executions>

					<execution>
						<id>pack_zip</id>
						<phase>package</phase>
						<configuration>
							<target>
								<zip destfile="${basedir}/${target.root.dir}/${target2.folder.name}/${project.build.finalName}.${arc.fext}">
									<zipfileset dir="${project.build.directory}"
										includes="${libs.dir}/**" />
									<zipfileset dir="${project.build.directory}"
										includes="${project.build.finalName}.${project.packaging}" />
									<zipfileset dir="${basedir}" includes="readme.txt" />
								</zip>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>

					<execution>
						<id>clean_target2</id>
						<phase>clean</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<delete
									file="${basedir}/${target.root.dir}/${target2.folder.name}/${project.build.finalName}.${project.packaging}">
								</delete>
								<delete
									file="${basedir}/${target.root.dir}/${target2.folder.name}/${project.build.finalName}.${arc.fext}">
								</delete>
							</target>
						</configuration>
					</execution>

					<execution>
						<id>copy_to_target2</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy quiet="true" overwrite="true" force="true"
									file="${project.build.directory}/${project.build.finalName}.${project.packaging}"
									tofile="${basedir}/${target.root.dir}/${target2.folder.name}/${project.build.finalName}.${project.packaging}">
								</copy>
								<copy quiet="true" overwrite="true" force="true"
									file="${project.build.directory}/${project.build.finalName}.${project.packaging}"
									tofile="${basedir}/${target.root.dir}/${target2.folder.name}/${project.artifactId}.${project.packaging}">
								</copy>
							</target>
						</configuration>
					</execution>

				</executions>
			</plugin>
      	</plugins>
	</build>

</project>
